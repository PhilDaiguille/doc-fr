<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 9e08f606a38fb7c0de98b42375636692d43d7040 Maintainer: PhilDaiguille Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.curl-share-init-persistent" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>curl_share_init_persistent</refname>
  <refpurpose>Initialiser un gestionnaire de partage cURL <emphasis role="bold">persistant</emphasis></refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>CurlSharePersistentHandle</type><methodname>curl_share_init_persistent</methodname>
   <methodparam><type>array</type><parameter>share_options</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   Initialise un gestionnaire de partage cURL <emphasis role="bold">persistant</emphasis>
   avec les options de partage données. Contrairement à <function>curl_share_init</function>,
   les gestionnaires créés par cette fonction ne seront pas détruits à la fin de la
   requête PHP. Si un gestionnaire de partage persistant avec le même ensemble
   d'<parameter>share_options</parameter> est trouvé, il sera réutilisé.
  </simpara>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;

  <variablelist>
   <varlistentry>
    <term><parameter>share_options</parameter></term>
    <listitem>
     <simpara>
      Un tableau non vide de constantes <constant>CURL_LOCK_DATA_<replaceable>*</replaceable></constant>.
     </simpara>
     <note>
      <simpara>
       <constant>CURL_LOCK_DATA_COOKIE</constant>
       n'est pas autorisé et, s'il est spécifié, cette fonction lèvera une
       <exceptionname>ValueError</exceptionname>. Le partage de cookies entre les requêtes PHP
       peut entraîner un mélange involontaire de cookies sensibles entre les utilisateurs.
      </simpara>
     </note>
    </listitem>
   </varlistentry>
  </variablelist>

 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <simpara>
   Retourne un <classname>CurlSharePersistentHandle</classname>.
  </simpara>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <itemizedlist>
   <listitem>
    <simpara>
     Si <parameter>share_options</parameter> est vide, cette fonction lève
     une <exceptionname>ValueError</exceptionname>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Si <parameter>share_options</parameter> contient une valeur ne correspondant pas
     à une <constant>CURL_LOCK_DATA_<replaceable>*</replaceable></constant>,
     cette fonction lève une <classname>ValueError</classname>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Si <parameter>share_options</parameter> contient
     <constant>CURL_LOCK_DATA_COOKIE</constant>, cette fonction lève une
     <exceptionname>ValueError</exceptionname>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Si <parameter>share_options</parameter> contient une valeur non entière,
     cette fonction lève une <exceptionname>TypeError</exceptionname>.
    </simpara>
   </listitem>
  </itemizedlist>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example xml:id="function.curl-share-init-persistent.example.basic">
   <title>Exemple de <function>curl_share_init_persistent</function></title>
   <simpara>
    Cet exemple va créer un gestionnaire de partage cURL persistant et démontrer
    le partage de connexions entre eux. Si cela est exécuté dans un SAPI PHP longue durée,
    <literal>$sh</literal> survivra entre les requêtes SAPI.
   </simpara>

   <programlisting role="php">
    <![CDATA[
<?php

// Créer ou récupérer un gestionnaire de partage cURL persistant configuré pour partager les recherches DNS et les connexions
$sh = curl_share_init_persistent([CURL_LOCK_DATA_DNS, CURL_LOCK_DATA_CONNECT]);

// Initialiser le premier gestionnaire cURL et lui attribuer le gestionnaire de partage
$ch1 = curl_init("http://example.com/");
curl_setopt($ch1, CURLOPT_SHARE, $sh);

// Exécuter le premier gestionnaire cURL. Cela peut réutiliser la connexion d'une requête SAPI antérieure
curl_exec($ch1);

// Initialiser le second gestionnaire cURL et lui attribuer le gestionnaire de partage
$ch2 = curl_init("http://example.com/");
curl_setopt($ch2, CURLOPT_SHARE, $sh);

// Exécuter le second gestionnaire cURL. Cela réutilisera la connexion de $ch1
curl_exec($ch2);

?>

    ]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>curl_setopt</function></member>
   <member><function>curl_share_init</function></member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
